#!/usr/bin/env bash

PRIMARY_DISPLAY=0

open_desktop() {
    screen_id=$1
    if [[ $screen_id == $PRIMARY_DISPLAY ]]; then
        eww open --screen "$screen_id" --id "$screen_id" desktop-clock
    else
        eww open --screen "$screen_id" --id "$screen_id" desktop
    fi
}

monitor() {
    line=$1
    if [[ "$line" =~ ^monitoraddedv2 ]]; then
        event_data=${line#monitoraddedv2>>}

        IFS=',' read -r screen_id monitor_name monitor_model <<< "$event_data"

        if [[ -n "$screen_id" && -n "$monitor_name" ]]; then
            MONITORS["$screen_id"]="$monitor_name"

            echo "Monitor added: $screen_id ($monitor_name - $monitor_model)"

            sleep 1

            open_desktop $screen_id
        else
            echo "Error parsing monitoraddedv2 event: $line"
        fi
    fi
}

window_title() {
    echo `hyprctl activewindow -j | jq --raw-output .title`
}

workspaces() {
    hyprctl workspaces -j | jq 'map({id: .id | tostring, windows: .windows, screen: .monitorID})' | tr -d '\n'
}

if [[ $1 == 'workspaces' ]]; then 
    echo "{ \"workspaces\": $(workspaces), \"active\": 1, \"active_empty\": true }"
    active_empty='true'
    socat -u UNIX-CONNECT:/run/user/1000/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | while read -r line; do

        active=$(hyprctl activeworkspace -j | jq '.id')
        active_monitor=$(hyprctl activeworkspace -j | jq '.monitorID')

        if [[ $active_monitor == $PRIMARY_DISPLAY ]]; then
            active_empty='true'

            let "i = $active"
            if [[ $(workspaces | jq --raw-output ".[] | select(.id == \"$i\") | .windows") == 0 ]]; then
                active_empty='false'
            fi
        fi


        echo "{\"workspaces\": $(workspaces),\"active\": $active,\"active_empty\": $active_empty}" 
        eww update workspaces="{\"workspaces\": $(workspaces),\"active\": $active,\"active_empty\": $active_empty}"
    done
fi

if [[ $1 == 'window' ]]; then
    window_title
    socat -u UNIX-CONNECT:/run/user/1000/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | while read -r line; do
        window_title $line
    done
elif [[ $1 == 'monitor' ]]; then

    MONITORS=`hyprctl -j monitors | jq -r '.[] | .id'`
    while IFS= read -r screen_id; do
        open_desktop $screen_id
    done <<< "$MONITORS"

    socat -u UNIX-CONNECT:/run/user/1000/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | while read -r line; do
        monitor $line
    done
fi
