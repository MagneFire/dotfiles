#!/bin/bash
# Merge all windows on the current workspace into a group.

CURRENT_WORKSPACE=`hyprctl -j activeworkspace | jq -r '"\(.id)"'`

GROUPED=`hyprctl -j clients | jq -r '.[] | select(.workspace.id | contains('$CURRENT_WORKSPACE')) | select(.grouped | length > 0) | "\(.grouped)"'`

if [[ -z "$GROUPED" ]]; then
    # Activate group on active window
    hyprctl dispatch togglegroup
fi

while true; do
    HAS_UNGROUPED=`hyprctl -j clients | jq -r '.[] | select(.workspace.id | contains('$CURRENT_WORKSPACE')) | select(.grouped | length == 0) | "\(.grouped)"'`
    if [[ -z "$HAS_UNGROUPED" ]]; then
        echo "All windows grouped"
        exit
    fi

    hyprctl dispatch cyclenext

    IS_FOCUSED_GROUPED=(`hyprctl -j clients | jq -r '.[] | select(.workspace.id | contains('$CURRENT_WORKSPACE')) | select(.focusHistoryID == 0) | select(.grouped | length == 0) | "\(.grouped)"'`)
    if [[ -z "$IS_FOCUSED_GROUPED" ]]; then
        echo "Current window is already grouped, skipping"
        continue
    fi

    # Get grouped geometry by getting all grouped windows then get the last focused window on the stack to fix geometry consistency issues.
    GROUP_GEOMETRY=(`hyprctl -j clients | jq -r '.[] | select(.workspace.id | contains('$CURRENT_WORKSPACE')) | select(.grouped | length > 0)' | jq -s 'limit(1; sort_by(.focusHistoryID)[]) | .at[0], .at[1], .size[0], .size[1]'`)

    CURRENT_WORKSPACE_GEOMETRY=(`hyprctl -j clients | jq -r '.[] | select(.workspace.id | contains('$CURRENT_WORKSPACE')) | select(.focusHistoryID == 0) | .at[0], .at[1], .size[0], .size[1]'`)

    if [ $((${CURRENT_WORKSPACE_GEOMETRY[0]} + ${CURRENT_WORKSPACE_GEOMETRY[2]})) -le ${GROUP_GEOMETRY[0]} ]; then
        echo "Move current window in the group to the right"
        hyprctl dispatch moveintogroup r
    fi

    if [ $((${GROUP_GEOMETRY[0]} + ${GROUP_GEOMETRY[2]})) -le ${CURRENT_WORKSPACE_GEOMETRY[0]} ]; then
        echo "Move current window in the group to the left"
        hyprctl dispatch moveintogroup l
    fi

    if [ $((${CURRENT_WORKSPACE_GEOMETRY[1]} + ${CURRENT_WORKSPACE_GEOMETRY[3]})) -le ${GROUP_GEOMETRY[1]} ]; then
        echo "Move current window in the group to the bottom"
        hyprctl dispatch moveintogroup d
    fi

    if [ $((${GROUP_GEOMETRY[1]} + ${GROUP_GEOMETRY[3]})) -le ${CURRENT_WORKSPACE_GEOMETRY[1]} ]; then
        echo "Move current window in the group to the top"
        hyprctl dispatch moveintogroup u
    fi

done
